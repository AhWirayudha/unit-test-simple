name: Run Unit Tests

on:
  push:
    branches: [main, develop, feature/*, hotfix/*] # Runs on more branch patterns
  pull_request:
    branches: [main, develop] # PRs to main and develop
  workflow_dispatch:
    inputs:
      node_version:
        description: "Node.js version to test with"
        required: false
        default: "20.x"
        type: choice
        options:
          - "18.x"
          - "20.x"
          - "both"
      run_coverage:
        description: "Generate code coverage report"
        required: false
        default: true
        type: boolean
      notify_discord:
        description: "Send Discord notification"
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.node_version != 'both' && fromJSON(format('["{0}"]', github.event.inputs.node_version)) || fromJSON('["18.x", "20.x"]') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      # - name: Run ESLint
      #   run: npm run lint

      - name: Run unit tests
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.run_coverage }}" = "false" ]; then
            npm test -- --ci --watchAll=false
          else
            npm test -- --ci --coverage --watchAll=false
          fi
        continue-on-error: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.run_coverage == 'true')
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.run_coverage == 'true')
        with:
          name: coverage-report
          path: coverage/

      - name: Extract coverage percentage
        id: coverage
        if: matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.run_coverage == 'true')
        run: |
          if [ -f coverage/lcov-report/index.html ]; then
            # Extract coverage percentage from HTML report
            COVERAGE=$(grep -o 'headerCovTableEntryLo">[0-9.]*%' coverage/lcov-report/index.html | head -1 | grep -o '[0-9.]*' || echo "N/A")
            echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
            
            # Extract coverage details from lcov.info
            if [ -f coverage/lcov.info ]; then
              LINES_FOUND=$(grep -c "^LF:" coverage/lcov.info | head -1 || echo "0")
              LINES_HIT=$(grep -c "^LH:" coverage/lcov.info | head -1 || echo "0")
              FUNCTIONS_FOUND=$(grep -c "^FNF:" coverage/lcov.info | head -1 || echo "0")
              FUNCTIONS_HIT=$(grep -c "^FNH:" coverage/lcov.info | head -1 || echo "0")
              BRANCHES_FOUND=$(grep -c "^BRF:" coverage/lcov.info | head -1 || echo "0")
              BRANCHES_HIT=$(grep -c "^BRH:" coverage/lcov.info | head -1 || echo "0")
              
              echo "lines_found=$LINES_FOUND" >> $GITHUB_OUTPUT
              echo "lines_hit=$LINES_HIT" >> $GITHUB_OUTPUT
              echo "functions_found=$FUNCTIONS_FOUND" >> $GITHUB_OUTPUT
              echo "functions_hit=$FUNCTIONS_HIT" >> $GITHUB_OUTPUT
              echo "branches_found=$BRANCHES_FOUND" >> $GITHUB_OUTPUT
              echo "branches_hit=$BRANCHES_HIT" >> $GITHUB_OUTPUT
            fi
          else
            echo "percentage=N/A" >> $GITHUB_OUTPUT
          fi

      - name: Notify Discord on Success
        uses: Ilshidur/action-discord@master
        if: success() && matrix.node-version == '20.x' && env.DISCORD_WEBHOOK != '' && (github.event_name != 'workflow_dispatch' || github.event.inputs.notify_discord == 'true')
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ✅ **Tests Passed!** 
            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Actor:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Trigger:** ${{ github.event_name == 'workflow_dispatch' && '🔧 Manual Run' || '🔄 Automatic' }}

            � **Coverage:** ${{ steps.coverage.outputs.percentage != 'N/A' && format('{0}%', steps.coverage.outputs.percentage) || 'Coverage not generated' }}
            ${{ steps.coverage.outputs.percentage != 'N/A' && format('📈 **Lines:** {0}/{1} | **Functions:** {2}/{3} | **Branches:** {4}/{5}', steps.coverage.outputs.lines_hit, steps.coverage.outputs.lines_found, steps.coverage.outputs.functions_hit, steps.coverage.outputs.functions_found, steps.coverage.outputs.branches_hit, steps.coverage.outputs.branches_found) || '' }}

            �🔗 [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Notify Discord on Failure
        uses: Ilshidur/action-discord@master
        if: failure() && matrix.node-version == '20.x' && env.DISCORD_WEBHOOK != '' && (github.event_name != 'workflow_dispatch' || github.event.inputs.notify_discord == 'true')
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ❌ **Tests Failed!** 
            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Actor:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Trigger:** ${{ github.event_name == 'workflow_dispatch' && '🔧 Manual Run' || '🔄 Automatic' }}

            📊 **Coverage:** ${{ steps.coverage.outputs.percentage != 'N/A' && format('{0}%', steps.coverage.outputs.percentage) || 'Coverage not generated' }}
            ${{ steps.coverage.outputs.percentage != 'N/A' && format('📈 **Lines:** {0}/{1} | **Functions:** {2}/{3} | **Branches:** {4}/{5}', steps.coverage.outputs.lines_hit, steps.coverage.outputs.lines_found, steps.coverage.outputs.functions_hit, steps.coverage.outputs.functions_found, steps.coverage.outputs.branches_hit, steps.coverage.outputs.branches_found) || '' }}

            🔗 [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
