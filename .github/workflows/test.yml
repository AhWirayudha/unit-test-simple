name: Run Unit Tests

on:
  push:
    branches: [main, develop, feature/*, hotfix/*]  # Runs on more branch patterns
  pull_request:
    branches: [main, develop]                       # PRs to main and develop
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node.js version to test with'
        required: false
        default: '20.x'
        type: choice
        options:
          - '18.x'
          - '20.x'
          - 'both'
      run_coverage:
        description: 'Generate code coverage report'
        required: false
        default: true
        type: boolean
      notify_discord:
        description: 'Send Discord notification'
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ${{ 
          github.event_name == 'workflow_dispatch' && github.event.inputs.node_version != 'both' 
          ? fromJSON(format('["{0}"]', github.event.inputs.node_version))
          : fromJSON('["18.x", "20.x"]')
        }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      # - name: Run ESLint
      #   run: npm run lint

      - name: Run unit tests
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.run_coverage }}" = "false" ]; then
            npm test -- --ci --watchAll=false
          else
            npm test -- --ci --coverage --watchAll=false
          fi
        continue-on-error: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.run_coverage == 'true')
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.run_coverage == 'true')
        with:
          name: coverage-report
          path: coverage/

      - name: Notify Discord on Success
        uses: Ilshidur/action-discord@master
        if: success() && matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.notify_discord == 'true')
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ‚úÖ **Tests Passed!** 
            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Actor:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Trigger:** ${{ github.event_name == 'workflow_dispatch' && 'üîß Manual Run' || 'üîÑ Automatic' }}

            üîó [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Notify Discord on Failure
        uses: Ilshidur/action-discord@master
        if: failure() && matrix.node-version == '20.x' && (github.event_name != 'workflow_dispatch' || github.event.inputs.notify_discord == 'true')
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ‚ùå **Tests Failed!** 
            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Actor:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Trigger:** ${{ github.event_name == 'workflow_dispatch' && 'üîß Manual Run' || 'üîÑ Automatic' }}

            üîó [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
